AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  whom
Globals:
  Function:
    Timeout: 30
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:

  LandingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: whom-poc-landing
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      # AccessControl: Private

  PopuTargetBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: whom-poc-populated-target
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      # AccessControl: Private

  AttributeArchiveBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: whom-poc-attribute-archive
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      # AccessControl: Private

  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: whom-poc-logs
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      # AccessControl: Private

  PropLandingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: whom-poc-property-landing
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      # AccessControl: Private

  ObjTargetBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: whom-poc-object-target
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      # AccessControl: Private

  WhomSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True
      QueueName: WhomTickets.fifo

  WhomSqsReferenceQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True
      QueueName: WhomReferenceItems.fifo

  WhomSqsAddPropQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True
      QueueName: WhomAddProp.fifo

  WhomSqsIdentitiesQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True
      QueueName: WhomIdentitiesItems.fifo

  WhomSqsFrameworkBuilder:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True
      QueueName: WhomFrameworkRebuild.fifo

  WhomSQSReturnQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True 
      QueueName: WhomReturns.fifo

  WhomSQSAssociationsQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True 
      QueueName: WhomAssociations.fifo

  WhomPopulateQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: True 
      QueueName: WhomPopulate.fifo

  whomGenerateTicket:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-ticket-generate/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /tickets/generate/{method}/{identity-object-name}
            Method: post
            RequestParameters:
              - method.request.header.totalchunks
            Auth:
              ApiKeyRequired: true

  whomTicketAddChunk:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-ticket-add-chunk/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /tickets/generate/add-chunk
            Method: post
            RequestParameters:
              - method.request.header.ticketguid
            Auth:
              ApiKeyRequired: true

  whomFetchResult:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-fetch-results/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /tickets/{ticket-guid}
            Method: get
            RequestParameters:
              - method.request.header.chunkkey
            Auth:
              ApiKeyRequired: true

  whomFetchReference:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-fetch-reference/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /reference/{system-reference}
            Method: get
            Auth:
              ApiKeyRequired: true

  whomAddIdentityProperties:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identities-extprop-add/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
          S3PROPLANDING: whom-poc-property-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /identity/properties/{request-type}
            Method: post
            Auth:
              ApiKeyRequired: true

  whomFetchIdentityObjectFramework:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-fetch-identity-object-framework/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 256
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /identity/object-framework/{identity-guid}
            Method: get
            Auth:
              ApiKeyRequired: true

  whomFetchIdentity:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-fetch-identity/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /identity/{identity-guid}
            Method: get
            Auth:
              ApiKeyRequired: true

  whomUnlinkReference:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-reference-unlink/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /{source}/{system-reference}/{identity-object}/{identity-guid}/unlink
            Method: get
            Auth:
              ApiKeyRequired: true

  whomAssociateRequest:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identities-associate-request/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /identity/associate
            Method: post
            Auth:
              ApiKeyRequired: true

  whomIdentObjectsCreate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identities-objects-create/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /identity/object/create
            Method: post
            Auth:
              ApiKeyRequired: true

  whomIdentObjectsUpdate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identities-objects-update/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3ATTRIBARCHIVE: whom-poc-attribute-archive
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /identity/object/update
            Method: post
            Auth:
              ApiKeyRequired: true

  whomFetchAssociations:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-fetch-identity-associations/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: Api
          Properties: 
            Path: /identity/associations/fetch/{identity-guid}
            Method: get
            Auth:
              ApiKeyRequired: true

  whomFrameworkSendtoSQS:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-associations-trigger-framework-rebuild/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 256
      Events:
        whom:
          Type: DynamoDB
          Properties:
            Stream: 
              !GetAtt DynamoWhomIdentityAssociations.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true

  whomTicketSendtoSQS:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-ticket-send-to-queue/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: DynamoDB
          Properties:
            Stream: 
              !GetAtt DynamoWhomTicket.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true

  whomTicketStartChunkProcess:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-ticket-start-chunk-process/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: SQS
          Properties:
            Queue: !GetAtt WhomSqsQueue.Arn
            BatchSize: 1

  whomTicketProcessChunk:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-ticket-process-chunk/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: DynamoDB
          Properties:
            Stream: 
              !GetAtt DynamoWhomTickets3Keys.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Enabled: true

  whomGenReferences:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-reference-generate/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 256
      Events:
        whom:
          Type: SQS
          Properties:
            Queue: !GetAtt WhomSqsReferenceQueue.Arn
            BatchSize: 1

  whomModifyIdentities:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identity-modify/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 256
      Events:
        whom:
          Type: SQS
          Properties:
            Queue: !GetAtt WhomSqsIdentitiesQueue.Arn
            BatchSize: 1

  whomMarkOffReferences:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-reference-markoff-references/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: SQS
          Properties:
            Queue: !GetAtt WhomSQSReturnQueue.Arn
            BatchSize: 1

  whomFrameworkPersist:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-fetch-identity-object-framework-persist/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          OBJTARGET: whom-poc-object-target
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: SQS
          Properties:
            Queue: !GetAtt WhomSqsFrameworkBuilder.Arn
            BatchSize: 1

  whomIdentityAssociateProcess:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identities-associate-process/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: SQS
          Properties:
            Queue: !GetAtt WhomSQSAssociationsQueue.Arn
            BatchSize: 1

  whomFrameworkPopulateRebuildTrigger:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identities-extprop-buildtrigger/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: S3
          Properties:
            Bucket: !Ref ObjTargetBucket
            Events: s3:ObjectCreated:*

  whomExtPropAppend:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: whom-identities-extprop-append/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          S3ERRORS: whom-poc-logs
          S3LANDING: whom-poc-landing
          TARGET: whom-poc-object-target
          POPUTARGE: whom-poc-populated-target
      Role: arn:aws:iam::266995720231:role/whom-role
      MemorySize: 128
      Events:
        whom:
          Type: SQS
          Properties:
            Queue: !GetAtt WhomPopulateQueue.Arn
            BatchSize: 1

  DynamoWhomTicket:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: whom_ticket
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - AttributeName: ticket_guid
          AttributeType: S
        - AttributeName: ticket_status
          AttributeType: S
      GlobalSecondaryIndexes: 
        - 
          IndexName: "ticket_status-index"
          KeySchema: 
            - 
              AttributeName: "ticket_status"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      KeySchema: 
        - AttributeName: ticket_guid
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  DynamoWhomTickets3Keys:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: whom_ticket_chunk_keys
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - AttributeName: ticket_guid
          AttributeType: S
        - AttributeName: ticket_chunk_s3key
          AttributeType: S
      GlobalSecondaryIndexes: 
        - 
          IndexName: "ticket_guid-index"
          KeySchema: 
            - 
              AttributeName: "ticket_guid"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      KeySchema: 
        - AttributeName: ticket_chunk_s3key
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  DynamoWhomReferences:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: whom_references
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: system_reference
          AttributeType: S
      KeySchema:
        - AttributeName: system_reference 
          KeyType: HASH

  DynamoWhomIdentities:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: whom_identities
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: identity_guid
          AttributeType: S
        - AttributeName: identity_object_name
          AttributeType: S
      GlobalSecondaryIndexes: 
        - 
          IndexName: "identity_object_name-index"
          KeySchema: 
            - 
              AttributeName: "identity_object_name"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      KeySchema:
        - AttributeName: identity_guid 
          KeyType: HASH

  DynamoWhomIdentityOutcomes:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: whom_identity_request_outcomes
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: actual_identity_guid
          AttributeType: S
        - AttributeName: identity_object_name
          AttributeType: S
        - AttributeName: ticket_guid
          AttributeType: S
        - AttributeName: ticket_chunk_s3_key
          AttributeType: S
        - AttributeName: messageid
          AttributeType: S
      GlobalSecondaryIndexes: 
        - 
          IndexName: "identity_object_name-index"
          KeySchema: 
            - 
              AttributeName: "identity_object_name"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - 
          IndexName: "actual_identity_guid-index"
          KeySchema: 
            - 
              AttributeName: "actual_identity_guid"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - 
          IndexName: "ticket_guid-index"
          KeySchema: 
            - 
              AttributeName: "ticket_guid"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - 
          IndexName: "ticket_chunk_s3_key-index"
          KeySchema: 
            - 
              AttributeName: "ticket_chunk_s3_key"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      KeySchema:
        - AttributeName: messageid 
          KeyType: HASH

# This table can probably be coalesced into the main identity table. 
# To avoid GSIs I decided to save the key as the identity itself (either from or two). 
# A separate table allows the record for associations to use the maximum space on Dynamodb (400Kb??)

  DynamoWhomIdentityAssociations:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: whom_identity_associations
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: identity_guid 
          AttributeType: S 
      KeySchema:
        - AttributeName: identity_guid
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  DynamoWhomIdentityObjects:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: whom_identity_objects
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: identity_object_name
          AttributeType: S
      KeySchema:
        - AttributeName: identity_object_name
          KeyType: HASH

  DynamoWhomIdentityPropertyRequests:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: whom_identity_property_requests
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: request_guid
          AttributeType: S
        - AttributeName: identity_object_type
          AttributeType: S
        - AttributeName: identity_guid
          AttributeType: S
      GlobalSecondaryIndexes: 
        - 
          IndexName: "identity_object_type-index"
          KeySchema: 
            - 
              AttributeName: "identity_object_type"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - 
          IndexName: "identity_guid-index"
          KeySchema: 
            - 
              AttributeName: "identity_guid"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      KeySchema:
        - AttributeName: request_guid
          KeyType: HASH
